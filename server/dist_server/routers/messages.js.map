{"version":3,"sources":["../../server/routers/messages.js"],"names":["Router","express","post","req","res","body","username","content","profile","json","type","datePost","Date","toLocaleString","replace","MessagesModel","insertMany","then","catch","err","find","infos"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,SAASC,kBAAQD,MAAR,EAAb;;AAEAA,OAAOE,IAAP,CAAY,aAAZ,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACED,IAAIE,IADN;AAAA,QAC7BC,QAD6B,aAC7BA,QAD6B;AAAA,QACnBC,OADmB,aACnBA,OADmB;AAAA,QACVC,OADU,aACVA,OADU;;AAErC,QAAI,wBAAQD,OAAR,CAAJ,EAAsB;AAClBH,YAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAoBH,SAAU,2BAA9B,EAAT;AACH,KAFD,MAEK;AACD,YAAII,WAAW,IAAIC,IAAJ,GAAWC,cAAX,GAA4BC,OAA5B,CAAoC,OAApC,EAA6C,GAA7C,EAAkDA,OAAlD,CAA0D,SAA1D,EAAqE,EAArE,CAAf;AACAC,gCAAcC,UAAd,CAAyB,EAAEV,kBAAF,EAAYC,gBAAZ,EAAqBI,kBAArB,EAA+BH,gBAA/B,EAAzB,EAAmES,IAAnE,CACI,YAAI;AACAb,gBAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAmBH,SAAU,4CAA7B,EAAT;AACH,SAHL,EAGOW,KAHP,CAII,UAACC,GAAD,EAAS;AACLf,gBAAIK,IAAJ,CAASU,GAAT;AACP,SAND;AAOP;AAAC,CAbF;;AAeAnB,OAAOE,IAAP,CAAY,mBAAZ,EAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CW,4BAAcK,IAAd,GAAqBH,IAArB,CACI,UAACI,KAAD,EAAW;AACPjB,YAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAmBH,SAAU,4CAA7B,EAA2Ec,YAA3E,EAAT;AACH,KAHL,EAGOH,KAHP,CAIQ,UAACC,GAAD,EAAS;AACLf,YAAIK,IAAJ,CAASU,GAAT;AACH,KANT;AAQH,CATD;;kBAWenB,M","file":"messages.js","sourcesContent":["import express from 'express';\r\nimport MessagesModel from '../models/messagesModel';\r\nimport { isEmpty } from 'validator';\r\n\r\nlet Router = express.Router();\r\n\r\nRouter.post('/addMessage', (req, res) => {\r\n    const { username, content, profile } = req.body;\r\n    if( isEmpty(content) ){\r\n        res.json({type : \"warning\" , content : \"content can not be empty!\" });\r\n    }else{\r\n        let datePost = new Date().toLocaleString().replace(/[年月]/g, '-').replace(/[日上下午]/g, '');\r\n        MessagesModel.insertMany({ username, content, datePost, profile }).then(\r\n            ()=>{\r\n                res.json({type : \"success\", content : \"Congratulations, AddMessage is successful!\"});\r\n            }).catch(\r\n            (err) => {\r\n                res.json(err);\r\n        });\r\n}})\r\n\r\nRouter.post('/get_all_messages', (req, res) => {\r\n    MessagesModel.find().then( \r\n        (infos) => {\r\n            res.json({type : \"success\", content : \"Congratulations, GetMessage is successful!\", infos});\r\n        }).catch(\r\n            (err) => {\r\n                res.json(err);\r\n            }\r\n        );\r\n})\r\n\r\nexport default Router;"]}