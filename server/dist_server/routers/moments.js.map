{"version":3,"sources":["../../server/routers/moments.js"],"names":["upload","dest","Router","express","post","req","res","body","title","content","picture","json","type","datePost","Date","toLocaleString","replace","MomtensModel","insertMany","then","catch","err","single","next","query","fs","rename","file","path","destination","find","infos"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;AACA,IAAIA,SAAS,sBAAO,EAAEC,MAAM,yBAAR,EAAP,CAAb,C,CAA0D;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAV+B;AAY/B,IAAIC,SAASC,kBAAQD,MAAR,EAAb;;AAEAA,OAAOE,IAAP,CAAY,UAAZ,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACED,IAAIE,IADN;AAAA,QAC1BC,KAD0B,aAC1BA,KAD0B;AAAA,QACnBC,OADmB,aACnBA,OADmB;AAAA,QACVC,OADU,aACVA,OADU;;AAElC,QAAI,wBAAQF,KAAR,CAAJ,EAAoB;AAChBF,YAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAoBH,SAAU,yBAA9B,EAAT;AACH,KAFD,MAEM,IAAI,wBAAQA,OAAR,CAAJ,EAAsB;AACxBH,YAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAoBH,SAAU,2BAA9B,EAAT;AACH,KAFK,MAED;AACD,YAAII,WAAW,IAAIC,IAAJ,GAAWC,cAAX,GAA4BC,OAA5B,CAAoC,OAApC,EAA6C,GAA7C,EAAkDA,OAAlD,CAA0D,SAA1D,EAAqE,EAArE,CAAf;AACAC,+BAAaC,UAAb,CAAwB,EAAEV,YAAF,EAASC,gBAAT,EAAkBC,gBAAlB,EAA2BG,kBAA3B,EAAxB,EAA+DM,IAA/D,CACI,YAAI;AACAb,gBAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAmBH,SAAU,yCAA7B,EAAT;AACH,SAHL,EAGOW,KAHP,CAII,UAACC,GAAD,EAAS;AACLf,gBAAIK,IAAJ,CAASU,GAAT;AACP,SAND;AAOP;AAAC,CAfF;;AAiBAnB,OAAOE,IAAP,CAAY,UAAZ,EAAwBJ,OAAOsB,MAAP,CAAc,eAAd,CAAxB,EAAwD,UAAUjB,GAAV,EAAeC,GAAf,EAAoBiB,IAApB,EAA0B;AAAA,QACtEf,KADsE,GAC5DH,IAAImB,KADwD,CACtEhB,KADsE,EACjD;;AAC7BA,aAASiB,aAAGC,MAAH,CAAUrB,IAAIsB,IAAJ,CAASC,IAAnB,EAAyBvB,IAAIsB,IAAJ,CAASE,WAAT,GAAuBrB,KAAvB,GAA+B,MAAxD,EAAgE;AAAA,eAAMF,IAAIK,IAAJ,CAAS,SAAT,CAAN;AAAA,KAAhE,CAAT;AACH,CAHD;;AAKAT,OAAOE,IAAP,CAAY,kBAAZ,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1CW,2BAAaa,IAAb,GAAoBX,IAApB,CACI,UAACY,KAAD,EAAW;AACPzB,YAAIK,IAAJ,CAAS,EAACC,MAAO,SAAR,EAAmBH,SAAU,yCAA7B,EAAwEsB,YAAxE,EAAT;AACH,KAHL,EAGOX,KAHP,CAIQ,UAACC,GAAD,EAAS;AACLf,YAAIK,IAAJ,CAASU,GAAT;AACH,KANT;AAQH,CATD;;kBAWenB,M","file":"moments.js","sourcesContent":["import express from 'express';\r\nimport MomtensModel from '../models/momentsModel';\r\nimport { isEmpty } from 'validator';\r\n\r\nimport multer from 'multer';   // 用于上传图片\r\nimport fs from 'fs';  \r\nlet upload = multer({ dest: './public/img/momentPic/' })  // 设置动态图片的文件的存储目录\r\n\r\n// var storage = multer.diskStorage({\r\n//     //确定图片存储的位置\r\n//     destination: function (req, file, cb){\r\n//       cb(null, './public/img/momentPic/')\r\n// }});\r\n//   //生成的专门处理上传的一个工具，可以传入storage、limits等配置\r\n// var upload = multer({storage: storage});\r\n\r\nlet Router = express.Router();\r\n\r\nRouter.post('/addItem', (req, res) => {\r\n    const { title, content, picture } = req.body;\r\n    if( isEmpty(title) ){\r\n        res.json({type : \"warning\" , content : \"title can not be empty!\" });\r\n    }else if( isEmpty(content) ){\r\n        res.json({type : \"warning\" , content : \"content can not be empty!\" });\r\n    }else{\r\n        let datePost = new Date().toLocaleString().replace(/[年月]/g, '-').replace(/[日上下午]/g, '');\r\n        MomtensModel.insertMany({ title, content, picture, datePost }).then(\r\n            ()=>{\r\n                res.json({type : \"success\", content : \"Congratulations, AddItem is successful!\"});\r\n            }).catch(\r\n            (err) => {\r\n                res.json(err);\r\n        });\r\n}})\r\n\r\nRouter.post('/picture', upload.single('momentPicture'), function (req, res, next) {  \r\n    const { title } = req.query  // 这里居然是用前端传来的， 以后再修改\r\n    title && fs.rename(req.file.path, req.file.destination + title + '.jpg', () => res.json(\"success\"));\r\n})\r\n\r\nRouter.post('/get_all_moments', (req, res) => {\r\n    MomtensModel.find().then( \r\n        (infos) => {\r\n            res.json({type : \"success\", content : \"Congratulations, GetItem is successful!\", infos});\r\n        }).catch(\r\n            (err) => {\r\n                res.json(err);\r\n            }\r\n        );\r\n})\r\n\r\nexport default Router;"]}